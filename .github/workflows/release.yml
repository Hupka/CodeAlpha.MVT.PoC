name: Release
on: [workflow_dispatch]

permissions:
  id-token: write # Make GitHub populate environment variables for OIDC with GCP
  contents: write # Get access to repository

jobs:
  update_version:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Git Semantic Version
        id: versioning
        uses: PaulHatch/semantic-version@v4.0.2
        with:
          tag_prefix: 'v'
          major_pattern: '(MAJOR)'
          minor_pattern: '(MINOR)'
          format: '${major}.${minor}.${patch}'
          bump_each_commit: false
      - run: pip3 install -r scripts/requirements.txt
      - name: Update repo version
        env:
          VERSION: ${{ steps.versioning.outputs.version }}
        run: python3 ./scripts/update_repo_version.py
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Update version to v${{ steps.versioning.outputs.version }}
          tagging_message: v${{ steps.versioning.outputs.version }}
    outputs:
      version: ${{ steps.versioning.outputs.version }}

  build_and_publish:
    needs: [update_version]
    runs-on: [self-hosted, adam]
    timeout-minutes: 60
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0.8.1
        with:
          workload_identity_provider: projects/767491075312/locations/global/workloadIdentityPools/codealpha-pool-2/providers/codealpha-gh-provider
          service_account: release-creation@client-backend-x.iam.gserviceaccount.com
      - id: 'fetch-tauri-private-key-secrets'
        uses: 'google-github-actions/get-secretmanager-secrets@v0.5.0'
        with:
          secrets: |-
            private-key:767491075312/tauri_private_key
            private-key-pw:767491075312/tauri_key_pw
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Npm prepare
        run: npm run prepare
      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Install dependencies
        run: |
          npm ci --loglevel verbose
          rustup target add aarch64-apple-darwin
          rustup target add x86_64-apple-darwin
      - name: Build
        env:
          ENABLE_CODE_SIGNING: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          APPLE_SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_IDENTITY }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
          TAURI_PRIVATE_KEY: ${{ steps.fetch-tauri-private-key-secrets.outputs.private-key }}
          TAURI_KEY_PASSWORD: ${{ steps.fetch-tauri-private-key-secrets.outputs.private-key-pw }}
        run: npm run build
      - id: 'upload-file'
        uses: 'google-github-actions/upload-cloud-storage@v0.10.2'
        with:
          path: './src-tauri/target/universal-apple-darwin/release/bundle/dmg'
          destination: 'codealpha-releases/${{needs.update_version.outputs.version}}'
          glob: '*.dmg'
      - name: Update manifest
        env:
          VERSION: ${{needs.update_version.outputs.version}}
          URL: ${{ steps.upload-file.outputs.uploaded }}
        run: python3 ./scripts/update_release_manifest.py
      - id: 'upload-release-manifest'
        uses: 'google-github-actions/upload-cloud-storage@v0.10.2'
        with:
          path: './manifest.json'
          destination: 'codealpha-releases'
          parent: false
