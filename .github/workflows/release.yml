name: Publish
on: [push]

permissions:
  id-token: write # Make GitHub populate environment variables for OIDC with GCP
  contents: read # Get access to repository

jobs:
  Publish:
    runs-on: [self-hosted, adam]
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3
      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0.8.1
        with:
          workload_identity_provider: projects/767491075312/locations/global/workloadIdentityPools/codealpha-pool-2/providers/codealpha-gh-provider
          service_account: release-creation@client-backend-x.iam.gserviceaccount.com
      - id: 'fetch-tauri-private-key-secrets'
        uses: 'google-github-actions/get-secretmanager-secrets@v0.5.0'
        with:
          secrets: |-
            private-key:767491075312/tauri_private_key
            private-key-pw:767491075312/tauri_key_pw
      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: 18
      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Install dependencies
        run: |
          npm ci --loglevel verbose
          rustup target add aarch64-apple-darwin
          rustup target add x86_64-apple-darwin
      - name: Build
        env:
          ENABLE_CODE_SIGNING: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          APPLE_SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_IDENTITY }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
          TAURI_PRIVATE_KEY: ${{ steps.fetch-tauri-private-key-secrets.outputs.private-key }}
          TAURI_KEY_PASSWORD: ${{ steps.fetch-tauri-private-key-secrets.outputs.private-key-pw }}
        run: npm run build
      - name: Auto Increment Semver Action
        uses: MCKanpolat/auto-semver-action@1.0.7
        id: versioning
        with:
          releaseType: patch
          incrementPerCommit: false
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Releasing new version
        run: echo ${{ steps.versioning.outputs.version }}
      - id: 'upload-file'
        uses: 'google-github-actions/upload-cloud-storage@v0.5.0'
        with:
          path: './src-tauri/target/universal-apple-darwin/release/bundle/macos'
          destination: 'codealpha-releases/${{steps.versioning.outputs.version}}'
          glob: '**'
      - name: Update releases.json
        run: |
          import os
          import datetime
          import requests
          import json
          with open('./src-tauri/target/universal-apple-darwin/release/bundle/macos/CodeAlpha.app.tar.gz.sig', 'r') as file:
            signature = file.read()

          response = requests.get("https://storage.googleapis.com/codealpha-releases/releases.json")
          with open("./releases.json", "w") as f: # opening a file handler to create new file 
            f.write(resp.content) 

          release = {
            "version": "${{ steps.versioning.outputs.version }}",
            "pub_date": datetime.datetime.now().isoformat(),
            "platforms": {
              "darwin-aarch64": {
                "signature": signature,
                "url": "${{ steps.upload-file.outputs.uploaded }}"
              },
              "darwin-x86_64": {
                "signature": signature,
                "url": "${{ steps.upload-file.outputs.uploaded }}"
              }
            }
          }
          f = open("releases.json", "a")
          f.write(json.dumps(release))
        shell: python
      - id: 'upload-release-manifest'
        uses: 'google-github-actions/upload-cloud-storage@v0.5.0'
        with:
          path: './releases.json'
          destination: 'codealpha-releases/releases2.json'
